C51 COMPILER V5.02,  SN-  MAIN                                                             11/02/16  23:15:27  PAGE 1   


DOS C51 COMPILER V5.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN MAIN.OBJ
COMPILER INVOKED BY: C:\C55\C51.EXE MAIN.C IP SB CD WL(2) ROM(LARGE) SMALL PL(24575) 

stmt level    source

   1          /* Modification History
   2          * 
   3          * 2016-10-20 jep Send 'U' on UART.
   4          * 2016-10-20 jep Start with almost barest minimum: Just toggle LED fast.
   5          */
   6          
   7          #define Main_C
   8          #include "misc.h"
   9          #include "myboard.h"
  10          #include "8051f3xx.h"
  11          #include "slf32x.h"
  12          #include "uart.h"
  13          #include "main.h"
  14          
  15          /*****************************************************************************/
  16          
  17          void initializeOscillators(void)
  18          {
  19   1         oscicn=IntOscEnable_Mask|IntOscDivideBy2;
  20   1         while (!(oscicn&IntOscReady_Mask))
  21   1            ;
  22   1      
  23   1         oscxcn=ExtOscDisabled;
  24   1      
  25   1         /* configure the 4* clock multiplier */
  26   1         clkmul=0; /* reset the multiplier */
  27   1      
  28   1         /* 4X multiplier will be low power, if multiplier has no input */
  29   1         clksel=USBClk4XMult    |SysClkIntOsc;
  30   1      }
  31          
  32          /*****************************************************************************/
  33          
  34          void initialize(void)
  35          {
  36   1         pca0md&=~WatchdogTimerEnable_Mask; /* disable watchdog */
  37   1      
  38   1         P0    =RXD_Mask|TXD_Mask;
  39   1         P0MDIN=RXD_Mask|TXD_Mask;
  40   1         P0MDOUT=TXD_Mask;
  41   1      
  42   1         /* The crossbar must be enabled and configured before digital peripherals 
  43   1         *  are enabled. */
  44   1         xbr0=UARTAtPin;
  45   1         xbr1=CrossbarEnabled;
  46   1      
  47   1         initializeOscillators();
  48   1         initializeUart(UartBitRate);
  49   1      
  50   1      #if 1
  51   1         /* drivel to shut up whiny compiler */
  52   1         if (EA && !EA) {
  53   2            getUartByte();
  54   2         }
  55   1      #endif
  56   1      }
  57          
  58          /*****************************************************************************/
  59          
  60          void main(void)
  61          {
  62   1         initialize();
  63   1      
  64   1         for (;;) {
  65   2            putUartByte('U');
  66   2      
  67   2            led1Dark=False;
  68   2            led1Dark=True;
  69   2         }
  70   1      }
  71          
C51 COMPILER V5.02,  SN-  MAIN                                                             11/02/16  23:15:27  PAGE 2   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION initializeOscillators (BEGIN)
                                           ; SOURCE LINE # 17
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 19
0000 75B282        MOV     oscicn,#082H
0003         ?C0001:
                                           ; SOURCE LINE # 20
0003 E5B2          MOV     A,oscicn
0005 30E6FB        JNB     ACC.6,?C0001
0008         ?C0002:
                                           ; SOURCE LINE # 23
0008 E4            CLR     A
0009 F5B1          MOV     oscxcn,A
                                           ; SOURCE LINE # 26
000B F5B9          MOV     clkmul,A
                                           ; SOURCE LINE # 29
000D F5A9          MOV     clksel,A
                                           ; SOURCE LINE # 30
000F 22            RET     
             ; FUNCTION initializeOscillators (END)

             ; FUNCTION initialize (BEGIN)
                                           ; SOURCE LINE # 34
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
0000 53D9BF        ANL     pca0md,#0BFH
                                           ; SOURCE LINE # 38
0003 758030        MOV     P0,#030H
                                           ; SOURCE LINE # 39
0006 75F130        MOV     P0MDIN,#030H
                                           ; SOURCE LINE # 40
0009 75A410        MOV     P0MDOUT,#010H
                                           ; SOURCE LINE # 44
000C 75E101        MOV     xbr0,#01H
                                           ; SOURCE LINE # 45
000F 75E240        MOV     xbr1,#040H
                                           ; SOURCE LINE # 47
0012 120000  R     LCALL   initializeOscillators
                                           ; SOURCE LINE # 48
0015 7F00          MOV     R7,#00H
0017 7E4B          MOV     R6,#04BH
0019 120000  E     LCALL   _initializeUart
                                           ; SOURCE LINE # 52
001C 30AF06        JNB     EA,?C0005
001F 20AF03        JB      EA,?C0005
                                           ; SOURCE LINE # 53
0022 120000  E     LCALL   getUartByte
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 56
0025         ?C0005:
0025 22            RET     
             ; FUNCTION initialize (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
                                           ; SOURCE LINE # 62
0000 120000  R     LCALL   initialize
                                           ; SOURCE LINE # 64
0003         ?C0006:
                                           ; SOURCE LINE # 65
0003 7F55          MOV     R7,#055H
0005 120000  E     LCALL   _putUartByte
                                           ; SOURCE LINE # 67
0008 C2A3          CLR     led1Dark
                                           ; SOURCE LINE # 68
000A D2A3          SETB    led1Dark
                                           ; SOURCE LINE # 69
000C 80F5          SJMP    ?C0006
                                           ; SOURCE LINE # 70
000E 22            RET     
             ; FUNCTION main (END)

C51 COMPILER V5.02,  SN-  MAIN                                                             11/02/16  23:15:27  PAGE 3   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


xbr1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E2H  1
CCF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DAH  1
TB80 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
ClkRecoveryMask. . . . . . . . . . . .  E_CONST  -----  INT      -----  2
indexUsbRegEnum. . . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CCF3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DBH  1
P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
SPIEN. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F8H  1
CCF4 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DCH  1
clksel . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A9H  1
oscicn . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B2H  1
FullSpeedModeClkRecovery . . . . . . .  E_CONST  -----  INT      -----  2
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
MCE0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
i2cAckIsRequested. . . . . . . . . . .  ABSBIT   -----  BIT      00C3H  1
CF . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DFH  1
clkmul . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B9H  1
P0MDOUT. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A4H  1
i2cInterruptRequested. . . . . . . . .  ABSBIT   -----  BIT      00C0H  1
SingleStepMode . . . . . . . . . . . .  E_CONST  -----  INT      -----  2
ClkRecoveryDisabled. . . . . . . . . .  E_CONST  -----  INT      -----  2
i2cAck . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C1H  1
i2cStart . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C5H  1
TXBMT. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F9H  1
oscxcn . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B1H  1
CR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DEH  1
T2SPLIT. . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
TF2H . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
REN0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
TF2L . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
ARBLOST. . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
SI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C0H  1
flag . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
signedWord . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
ClkRecoveryEnabled . . . . . . . . . .  E_CONST  -----  INT      -----  2
LowSpeedModeClkRecovery. . . . . . . .  E_CONST  -----  INT      -----  2
AD0INT . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EDH  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     -----  -----
MODF . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FDH  1
i2cStop. . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C4H  1
ulong. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
S0MODE . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
P0MDIN . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F1H  1
i2cIsMaster. . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C7H  1
TF2LEN . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
SPIF . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FFH  1
WCOL . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FEH  1
byte . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
NSSMD0 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FAH  1
_initializeUart. . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
pca0md . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D9H  1
NSSMD1 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FBH  1
initialize . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     -----  -----
T2XCLK . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
rxInterruptFlag. . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
txInterruptFlag. . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
word . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
ES0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
AD0EN. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EFH  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
RI0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
TI0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
MASTER . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C7H  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
ACK. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C1H  1
ClkRecovery1StepMask . . . . . . . . .  E_CONST  -----  INT      -----  2
initializeOscillators. . . . . . . . .  PUBLIC   CODE   PROC     -----  -----
TXMODE . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C6H  1
PS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
AD0TM. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EEH  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
SelectEndpoint0. . . . . . . . . . . .  E_CONST  -----  INT      -----  2
clkrecUsbRegEnum . . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
SelectEndpoint1. . . . . . . . . . . .  E_CONST  -----  INT      -----  2
SelectEndpoint2. . . . . . . . . . . .  E_CONST  -----  INT      -----  2
SelectEndpoint3. . . . . . . . . . . .  E_CONST  -----  INT      -----  2
i2cIsTransmitter . . . . . . . . . . .  ABSBIT   -----  BIT      00C6H  1
ESPI0. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AEH  1
LowSpdClkRecoveryModeMask. . . . . . .  E_CONST  -----  INT      -----  2
NormalCalibrationMode. . . . . . . . .  E_CONST  -----  INT      -----  2
STA. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C5H  1
i2cArbitrationIsLost . . . . . . . . .  ABSBIT   -----  BIT      00C2H  1
led1Dark . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A3H  1
PSPI0. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BEH  1
T2SOF. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
_putUartByte . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
RXOVRN . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FCH  1
ACKRQ. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C3H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
AD0CM0 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E8H  1
F1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D1H  1
STO. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C4H  1
getUartByte. . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
AD0CM1 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E9H  1
AD0CM2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EAH  1
AD0WINT. . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EBH  1
AD0BUSY. . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ECH  1
CCF0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D8H  1
RB80 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
xbr0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E1H  1
CCF1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D9H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     69    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
